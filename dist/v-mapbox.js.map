{"version":3,"file":"v-mapbox.js","sources":["../src/utils/symbols.ts","../src/utils/index.ts","../src/controls/VControlAttribution.vue","../src/controls/VControlFullscreen.vue","../src/constants/events/geolocate.ts","../src/controls/VControlGeolocate.vue","../src/controls/VControlNavigation.vue","../src/controls/VControlScale.vue","../src/layers/deck.gl/VLayerDeckArc.vue","../src/layers/deck.gl/VLayerDeckGeojson.vue","../src/layers/mapbox/VLayerMapboxCanvas.vue","../src/constants/events/layer.ts","../src/constants/events/map.ts","../src/constants/events/marker.ts","../src/constants/events/popup.ts","../src/layers/mapbox/VLayerMapboxGeojson.vue","../src/layers/mapbox/VLayerMapboxImage.vue","../src/layers/mapbox/VLayerMapboxRaster.vue","../src/layers/mapbox/VLayerMapboxVector.vue","../src/layers/mapbox/VLayerMapboxVideo.vue","../src/map/VMap.vue","../src/map/VMap.vue?vue&type=template&id=2e23fe52&lang.js","../src/popups/VPopup.vue","../src/popups/VPopup.vue?vue&type=template&id=bc809c96&lang.js","../src/markers/VMarker.vue","../src/markers/VMarker.vue?vue&type=template&id=7aa7f85e&lang.js","../src/index.ts"],"sourcesContent":["import type { Map } from 'mapbox-gl';\nimport type { InjectionKey, Ref } from 'vue';\n\nconst MapKey: InjectionKey<Ref<Map>> = Symbol('Map');\n\nexport { MapKey };\n","import type { InjectionKey } from 'vue';\nimport { inject } from 'vue';\n\n/**\n * Dependency injection ðŸ¥³\n *\n * @param {InjectionKey} key - The key to inject\n * @param {string | undefined} fallback - The fallback value\n * @returns {undefined} - The value\n */\nexport function injectStrict<T>(key: InjectionKey<T>, fallback?: T): T {\n  const resolved = inject(key, fallback);\n  if (!resolved) {\n    throw new Error(`Could not resolve ${key.description}`);\n  }\n  return resolved;\n}\n\nexport { MapKey } from './symbols';\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import { AttributionControl } from 'mapbox-gl';\n  import type { PropType } from 'vue';\n  import { defineComponent, onMounted } from 'vue';\n  import { injectStrict, MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VControlAttribution',\n    props: {\n      options: {\n        type: Object as PropType<{\n          compact?: boolean;\n          customAttribution?: string | string[];\n        }>,\n        default: () => ({\n          compact: false,\n          customAttribution: 'Map design by me',\n        }),\n        required: true,\n      },\n      position: {\n        type: String as PropType<\n          'top-right' | 'top-left' | 'bottom-right' | 'bottom-left'\n        >,\n        default: () => 'bottom-right',\n        required: false,\n      },\n    },\n    setup(props, { slots }) {\n      let map = injectStrict(MapKey);\n\n      onMounted(() => {\n        addControl();\n      });\n\n      /**\n       * Adds the Attribution Control\n       *\n       * @returns {void}\n       */\n      function addControl(): void {\n        const options = {\n          ...props.options,\n        };\n        if (slots && slots.default!() && Array.isArray(slots.default!())) {\n          // @ts-ignore\n          options.customAttribution = slots.default().at(0).el.data;\n        }\n        const control = new AttributionControl(options);\n        map.value.addControl(control, props.position);\n      }\n    },\n  });\n</script>\n","<script lang=\"ts\">\n  import type { FullscreenControlOptions } from 'mapbox-gl';\n  import { FullscreenControl } from 'mapbox-gl';\n  import type { PropType } from 'vue';\n  import { defineComponent, onMounted } from 'vue';\n  import { injectStrict, MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VControlFullscreen',\n    props: {\n      options: {\n        type: Object as PropType<FullscreenControlOptions>,\n        default: () => ({}),\n        required: true,\n      },\n      position: {\n        type: String as PropType<\n          'top-right' | 'top-left' | 'bottom-right' | 'bottom-left'\n        >,\n        default: () => 'top-left',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n\n      onMounted(() => {\n        addControl();\n      });\n\n      /**\n       * Adds the Attribution Control\n       *\n       * @returns {void}\n       */\n      function addControl(): void {\n        const control = new FullscreenControl(props.options);\n        map.value.addControl(control, props.position);\n      }\n    },\n  });\n</script>\n","export const geolocateControlEvents: string[] = [\n  'geolocate',\n  'error',\n  'outofmaxbounds',\n  'trackuserlocationstart',\n  'trackuserlocationend',\n];\n","<script lang=\"ts\">\n  import type { FitBoundsOptions, PositionOptions } from 'mapbox-gl';\n  import { GeolocateControl } from 'mapbox-gl';\n  import type { PropType } from 'vue';\n  import { defineComponent, onMounted } from 'vue';\n  import { geolocateControlEvents as events } from '../constants/events/geolocate';\n  import { injectStrict, MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VControlFullscreen',\n    props: {\n      options: {\n        type: Object as PropType<{\n          positionOptions?: PositionOptions;\n          fitBoundsOptions?: FitBoundsOptions;\n          trackUserLocation?: boolean;\n          showAccuracyCircle?: boolean;\n          showUserLocation?: boolean;\n        }>,\n        default: () => ({}),\n        required: true,\n      },\n      position: {\n        type: String as PropType<\n          'top-right' | 'top-left' | 'bottom-right' | 'bottom-left'\n        >,\n        default: () => 'top-left',\n        required: false,\n      },\n    },\n    setup(props, { emit }) {\n      let map = injectStrict(MapKey);\n\n      onMounted(() => {\n        addControl();\n      });\n\n      /**\n       * Adds the Attribution Control\n       *\n       * @returns {void}\n       */\n      function addControl(): void {\n        const control = new GeolocateControl(props.options);\n        map.value.addControl(control, props.position);\n        events.forEach((event: string) => {\n          control.on(event, () => {\n            emit(event);\n          });\n        });\n      }\n    },\n  });\n</script>\n","<script lang=\"ts\">\n  import { NavigationControl } from 'mapbox-gl';\n  import type { PropType } from 'vue';\n  import { defineComponent, onMounted } from 'vue';\n  import { injectStrict, MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VControlFullscreen',\n    props: {\n      options: {\n        type: Object as PropType<{\n          showCompass?: boolean;\n          showZoom?: boolean;\n          visualizePitch?: boolean;\n        }>,\n        default: () => ({}),\n        required: true,\n      },\n      position: {\n        type: String as PropType<\n          'top-right' | 'top-left' | 'bottom-right' | 'bottom-left'\n        >,\n        default: () => 'top-left',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n\n      onMounted(() => {\n        addControl();\n      });\n\n      /**\n       * Adds the Attribution Control\n       *\n       * @returns {void}\n       */\n      function addControl(): void {\n        const control = new NavigationControl(props.options);\n        map.value.addControl(control, props.position);\n      }\n    },\n  });\n</script>\n","<script lang=\"ts\">\n  import { ScaleControl } from 'mapbox-gl';\n  import type { PropType } from 'vue';\n  import { defineComponent, onMounted } from 'vue';\n  import { injectStrict, MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VControlFullscreen',\n    props: {\n      options: {\n        type: Object as PropType<{ maxWidth?: number; unit?: string }>,\n        default: () => ({}),\n        required: true,\n      },\n      position: {\n        type: String as PropType<\n          'top-right' | 'top-left' | 'bottom-right' | 'bottom-left'\n        >,\n        default: () => 'bottom-left',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n\n      onMounted(() => {\n        addControl();\n      });\n\n      /**\n       * Adds the Attribution Control\n       *\n       * @returns {void}\n       */\n      function addControl(): void {\n        const control = new ScaleControl(props.options);\n        map.value.addControl(control, props.position);\n      }\n    },\n  });\n</script>\n","<script lang=\"ts\">\n  // @ts-ignore\n  import { ArcLayer } from '@deck.gl/layers';\n  // @ts-ignore\n  import { MapboxLayer } from '@deck.gl/mapbox';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerDeckArc',\n    props: {\n      layerId: {\n        type: String as PropType<string>,\n        default: 'deck.gl-arc-layer',\n        required: true,\n      },\n      data: {\n        type: Object as PropType<any>,\n        required: true,\n      },\n      options: {\n        type: Object,\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = new MapboxLayer({\n        ...props.options,\n        id: props.layerId,\n        data: props.data,\n        type: ArcLayer,\n      });\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       *\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<script lang=\"ts\">\n  // @ts-ignore\n  import { GeoJsonLayer } from '@deck.gl/layers';\n  // @ts-ignore\n  import { MapboxLayer } from '@deck.gl/mapbox';\n  import { FeatureCollection } from 'geojson';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerDeckGeojson',\n    props: {\n      layerId: {\n        type: String as PropType<string>,\n        default: 'deck.gl-geojson-layer',\n        required: true,\n      },\n      data: {\n        type: Object as PropType<FeatureCollection>,\n        required: true,\n      },\n      options: {\n        type: Object,\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = new MapboxLayer({\n        ...props.options,\n        id: props.layerId,\n        data: props.data,\n        type: GeoJsonLayer,\n      });\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       *\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type { FeatureCollection } from 'geojson';\n  import type { AnyLayer, GeoJSONSourceRaw } from 'mapbox-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerMapboxCanvas',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-canvas-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-canvas-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<FeatureCollection>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n      const source: GeoJSONSourceRaw = {\n        type: 'geojson',\n        data: props.source,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       *\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","import { MapLayerEventType } from 'mapbox-gl';\n\nexport const mapLayerEvents: Array<keyof MapLayerEventType> = [\n  'click',\n  'dblclick',\n  'mousedown',\n  'mouseup',\n  'mousemove',\n  'mouseenter',\n  'mouseleave',\n  'mouseover',\n  'mouseout',\n  'contextmenu',\n  'touchstart',\n  'touchend',\n  'touchcancel',\n];\n","import { MapEventType } from 'mapbox-gl';\n\nexport const mapEvents: Array<keyof MapEventType> = [\n  'error',\n  'load',\n  'idle',\n  'remove',\n  'render',\n  'resize',\n  'webglcontextlost',\n  'webglcontextrestored',\n  'dataloading',\n  'data',\n  'tiledataloading',\n  'sourcedataloading',\n  'styledataloading',\n  'sourcedata',\n  'styledata',\n  'boxzoomcancel',\n  'boxzoomstart',\n  'boxzoomend',\n  'touchcancel',\n  'touchmove',\n  'touchend',\n  'touchstart',\n  'click',\n  'contextmenu',\n  'dblclick',\n  'mousemove',\n  'mouseup',\n  'mousedown',\n  'mouseout',\n  'mouseover',\n  'movestart',\n  'move',\n  'moveend',\n  'zoomstart',\n  'zoom',\n  'zoomend',\n  'rotatestart',\n  'rotate',\n  'rotateend',\n  'dragstart',\n  'drag',\n  'dragend',\n  'pitchstart',\n  'pitch',\n  'pitchend',\n  'wheel',\n];\n","export const markerMapEvents = ['dragstart', 'drag', 'dragend'];\nexport const markerDOMEvents = ['click', 'mouseenter', 'mouseleave'];\n","export const popupEvents = ['open', 'close'];\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type {\n    AnyLayer,\n    GeoJSONSourceRaw,\n    MapLayerEventType,\n  } from 'mapbox-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, onBeforeUnmount, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n  import { mapLayerEvents } from '../../constants/events';\n\n  export default defineComponent({\n    name: 'VLayerMapboxGeojson',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-geojson-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-geojson-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<GeoJSONSourceRaw>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props, { emit }) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n      let events: Ref<Array<keyof MapLayerEventType>> = ref(mapLayerEvents);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      watch(() => props.source, (source, prevSource) => {\n        map.value.getSource(props.sourceId).setData(source.data)\n      });\n\n      onMounted(() => {\n        addLayer();\n        listenLayerEvents();\n      });\n\n      /**\n       * Listen to layer events\n       *\n       * @returns {void}\n       */\n      function listenLayerEvents(): void {\n        // Listen for events\n        events.value.forEach((e) => {\n          map.value.on(e, props.layerId, (evt) => {\n            emit(e, evt);\n          });\n        });\n      }\n\n      onBeforeUnmount(() => {\n        removeLayer()\n      });\n\n      function removeLayer(): void {\n        if (map.value.getLayer(props.layerId)) {\n          map.value.removeLayer(props.layerId);\n          map.value.removeSource(props.sourceId);\n        }\n      };\n      /**\n       * Reâ€“adds the layer when style changed\n       *\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, props.source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type { AnyLayer, ImageSourceRaw } from 'mapbox-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerMapboxImage',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-image-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-image-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<ImageSourceRaw>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       *\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, props.source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type { FeatureCollection } from 'geojson';\n  import type { AnyLayer, GeoJSONSourceRaw } from 'mapbox-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerMapboxRaster',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-raster-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-raster-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<FeatureCollection>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n      const source: GeoJSONSourceRaw = {\n        type: 'geojson',\n        data: props.source,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       *\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type { AnyLayer, VectorSource } from 'mapbox-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerMapboxVector',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-vector-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-vector-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<VectorSource>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       *\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, props.source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type { AnyLayer, VectorSource } from 'mapbox-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerMapboxVideo',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-video-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'mapbox.gl-video-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<VectorSource>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       *\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, props.source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div :id=\"getContainer()\" class=\"v-map-container\">\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type { MapboxOptions, MapEventType } from 'mapbox-gl';\n  import { Map } from 'mapbox-gl';\n  import type { PropType, Ref, SetupContext } from 'vue';\n  import { defineComponent, onMounted, provide, ref } from 'vue';\n  import { mapEvents } from '../constants/events';\n  import { MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VMap',\n    props: {\n      options: {\n        type: Object as PropType<MapboxOptions>,\n        required: true,\n        default: () => ({}),\n      },\n    },\n    setup(props, { emit }: SetupContext) {\n      let map: Ref<Map> = ref({} as Map);\n      let loaded: Ref<boolean> = ref(false);\n      let events: Ref<Array<keyof MapEventType>> = ref(mapEvents);\n\n      onMounted(() => {\n        const options =\n          'container' in props.options\n            ? props.options\n            : { ...props.options, container: 'map' };\n        map.value = new Map(options);\n        loaded.value = true;\n        provide(MapKey, map);\n        listenMapEvents();\n      });\n\n      /**\n       * Listen to map events\n       *\n       * @returns {void}\n       */\n      function listenMapEvents(): void {\n        // Listen for events\n        events.value.forEach((e) => {\n          map.value.on(e, (evt) => {\n            switch (e) {\n              case 'load':\n                emit('loaded', map.value);\n                break;\n              default:\n                emit(e, evt);\n                break;\n            }\n          });\n        });\n      }\n\n      /**\n       * Gets the container element\n       *\n       * @returns {string} - The container element id\n       */\n      const getContainer = (): string => {\n        if (Object.keys(props.options).includes('container')) {\n          return `${props.options.container}`;\n        }\n        return 'map';\n      };\n\n      return {\n        getContainer,\n      };\n    },\n  });\n</script>\n\n<style>\n  canvas {\n    outline: none;\n  }\n\n  .v-map-container {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n","<template>\n  <div :id=\"getContainer()\" class=\"v-map-container\">\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type { MapboxOptions, MapEventType } from 'mapbox-gl';\n  import { Map } from 'mapbox-gl';\n  import type { PropType, Ref, SetupContext } from 'vue';\n  import { defineComponent, onMounted, provide, ref } from 'vue';\n  import { mapEvents } from '../constants/events';\n  import { MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VMap',\n    props: {\n      options: {\n        type: Object as PropType<MapboxOptions>,\n        required: true,\n        default: () => ({}),\n      },\n    },\n    setup(props, { emit }: SetupContext) {\n      let map: Ref<Map> = ref({} as Map);\n      let loaded: Ref<boolean> = ref(false);\n      let events: Ref<Array<keyof MapEventType>> = ref(mapEvents);\n\n      onMounted(() => {\n        const options =\n          'container' in props.options\n            ? props.options\n            : { ...props.options, container: 'map' };\n        map.value = new Map(options);\n        loaded.value = true;\n        provide(MapKey, map);\n        listenMapEvents();\n      });\n\n      /**\n       * Listen to map events\n       *\n       * @returns {void}\n       */\n      function listenMapEvents(): void {\n        // Listen for events\n        events.value.forEach((e) => {\n          map.value.on(e, (evt) => {\n            switch (e) {\n              case 'load':\n                emit('loaded', map.value);\n                break;\n              default:\n                emit(e, evt);\n                break;\n            }\n          });\n        });\n      }\n\n      /**\n       * Gets the container element\n       *\n       * @returns {string} - The container element id\n       */\n      const getContainer = (): string => {\n        if (Object.keys(props.options).includes('container')) {\n          return `${props.options.container}`;\n        }\n        return 'map';\n      };\n\n      return {\n        getContainer,\n      };\n    },\n  });\n</script>\n\n<style>\n  canvas {\n    outline: none;\n  }\n\n  .v-map-container {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n","<template>\n  <section :id=\"`popup-${Date.now()}`\" ref=\"content\">\n    <slot />\n  </section>\n</template>\n<script lang=\"ts\">\n  import type { LngLatLike, Map, Marker, PopupOptions } from 'mapbox-gl';\n  import type { PropType, Ref, SetupContext } from 'vue';\n  import { Popup } from 'mapbox-gl';\n  import { defineComponent, onBeforeUnmount, onMounted, ref } from 'vue';\n  import { popupEvents } from '../constants/events';\n  import { injectStrict, MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VPopup',\n    props: {\n      marker: {\n        type: Object as PropType<Marker>,\n        default: () => ({} as Marker),\n        required: false,\n      },\n      options: {\n        type: Object as PropType<PopupOptions>,\n        default: () => ({} as PopupOptions),\n        required: true,\n      },\n      coordinates: {\n        type: Object as PropType<LngLatLike>,\n        default: () => ({}),\n        required: true,\n      },\n    },\n    setup(props, { emit }: SetupContext) {\n      let map: Ref<Map> = injectStrict(MapKey);\n      let popup: Popup = new Popup(props.options);\n      let loaded: Ref<boolean> = ref(true);\n      const content: Ref<null | HTMLElement> = ref(null);\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      onMounted(() => {\n        if (loaded.value) {\n          setPopupContent();\n          setPopupCoordinates();\n          addToMarker();\n          listenPopupEvents();\n        } else {\n          remove();\n          removePopupEvents();\n        }\n      });\n\n      onBeforeUnmount(() => {\n        remove();\n        removePopupEvents();\n      });\n\n      /**\n       * Sets the HTML content for the popup\n       *\n       * @returns {void}\n       */\n      function setPopupContent(): void {\n        popup.setDOMContent(content.value as Node);\n      }\n      /**\n       * Set popup coordinates\n       *\n       * @returns {void}\n       */\n      function setPopupCoordinates(): void {\n        popup.setLngLat(props.coordinates);\n      }\n\n      /**\n       * Add popup to marker if marker exists\n       * else add it to the map.\n       *\n       * @returns {void}\n       */\n      function addToMarker(): void {\n        if (props.marker && Object.keys(props.marker).length !== 0) {\n          props.marker.setPopup(popup);\n        } else {\n          popup.addTo(map.value);\n        }\n        emit('added', { popup });\n      }\n      /**\n       * Remove popup from map\n       *\n       * @returns {void}\n       */\n      function remove(): void {\n        popup.remove();\n        emit('removed');\n      }\n\n      /**\n       * Listen to events\n       *\n       * @returns {void}\n       */\n      function listenPopupEvents(): void {\n        popupEvents.forEach((event: string) => {\n          popup.on(event, () => {\n            emit(event);\n          });\n        });\n      }\n      /**\n       * Turn off listener\n       *\n       * @returns {void}\n       */\n      function removePopupEvents(): void {\n        popupEvents.forEach((event: string) => {\n          popup.off(event, () => {\n            emit(event);\n          });\n        });\n      }\n\n      return {\n        content,\n      };\n    },\n  });\n</script>\n","<template>\n  <section :id=\"`popup-${Date.now()}`\" ref=\"content\">\n    <slot />\n  </section>\n</template>\n<script lang=\"ts\">\n  import type { LngLatLike, Map, Marker, PopupOptions } from 'mapbox-gl';\n  import type { PropType, Ref, SetupContext } from 'vue';\n  import { Popup } from 'mapbox-gl';\n  import { defineComponent, onBeforeUnmount, onMounted, ref } from 'vue';\n  import { popupEvents } from '../constants/events';\n  import { injectStrict, MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VPopup',\n    props: {\n      marker: {\n        type: Object as PropType<Marker>,\n        default: () => ({} as Marker),\n        required: false,\n      },\n      options: {\n        type: Object as PropType<PopupOptions>,\n        default: () => ({} as PopupOptions),\n        required: true,\n      },\n      coordinates: {\n        type: Object as PropType<LngLatLike>,\n        default: () => ({}),\n        required: true,\n      },\n    },\n    setup(props, { emit }: SetupContext) {\n      let map: Ref<Map> = injectStrict(MapKey);\n      let popup: Popup = new Popup(props.options);\n      let loaded: Ref<boolean> = ref(true);\n      const content: Ref<null | HTMLElement> = ref(null);\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      onMounted(() => {\n        if (loaded.value) {\n          setPopupContent();\n          setPopupCoordinates();\n          addToMarker();\n          listenPopupEvents();\n        } else {\n          remove();\n          removePopupEvents();\n        }\n      });\n\n      onBeforeUnmount(() => {\n        remove();\n        removePopupEvents();\n      });\n\n      /**\n       * Sets the HTML content for the popup\n       *\n       * @returns {void}\n       */\n      function setPopupContent(): void {\n        popup.setDOMContent(content.value as Node);\n      }\n      /**\n       * Set popup coordinates\n       *\n       * @returns {void}\n       */\n      function setPopupCoordinates(): void {\n        popup.setLngLat(props.coordinates);\n      }\n\n      /**\n       * Add popup to marker if marker exists\n       * else add it to the map.\n       *\n       * @returns {void}\n       */\n      function addToMarker(): void {\n        if (props.marker && Object.keys(props.marker).length !== 0) {\n          props.marker.setPopup(popup);\n        } else {\n          popup.addTo(map.value);\n        }\n        emit('added', { popup });\n      }\n      /**\n       * Remove popup from map\n       *\n       * @returns {void}\n       */\n      function remove(): void {\n        popup.remove();\n        emit('removed');\n      }\n\n      /**\n       * Listen to events\n       *\n       * @returns {void}\n       */\n      function listenPopupEvents(): void {\n        popupEvents.forEach((event: string) => {\n          popup.on(event, () => {\n            emit(event);\n          });\n        });\n      }\n      /**\n       * Turn off listener\n       *\n       * @returns {void}\n       */\n      function removePopupEvents(): void {\n        popupEvents.forEach((event: string) => {\n          popup.off(event, () => {\n            emit(event);\n          });\n        });\n      }\n\n      return {\n        content,\n      };\n    },\n  });\n</script>\n","<template>\n  <section :id=\"`marker-${Date.now()}`\" class=\"absolute\">\n    <slot :set-ref=\"setSlotRef\" name=\"markers\" />\n    <template v-if=\"isMarkerAvailable\">\n      <v-popup\n        :marker=\"marker\"\n        :options=\"popupOptions\"\n        :coordinates=\"coordinates\"\n      >\n        <slot />\n      </v-popup>\n    </template>\n  </section>\n</template>\n<script lang=\"ts\">\n  import type {\n    EventData,\n    LngLatLike,\n    MarkerOptions,\n    PopupOptions,\n  } from 'mapbox-gl';\n  import { Marker } from 'mapbox-gl';\n  import type { PropType, Ref, SetupContext } from 'vue';\n  import { defineComponent, onMounted, onBeforeUnmount, ref, watch } from 'vue';\n  import { markerDOMEvents, markerMapEvents } from '../constants/events';\n  import VPopup from '../popups/VPopup.vue';\n  import { injectStrict, MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VMarker',\n    components: {\n      VPopup,\n    },\n    props: {\n      options: {\n        type: Object as PropType<MarkerOptions>,\n        default: () => ({} as MarkerOptions),\n        required: true,\n      },\n      popupOptions: {\n        type: Object as PropType<PopupOptions>,\n        default: () => ({} as PopupOptions),\n        required: true,\n      },\n      coordinates: {\n        type: [Object, Array] as PropType<LngLatLike>,\n        default: () => ({}),\n        required: true,\n      },\n      cursor: {\n        type: String as PropType<string>,\n        default: 'pointer',\n        required: false,\n      },\n    },\n    setup(props, { emit }: SetupContext) {\n      let map = injectStrict(MapKey);\n      let marker: Ref<Marker> = ref({}) as Ref<Marker>;\n      let loaded: Ref<boolean> = ref(true);\n      let isMarkerAvailable = ref(false);\n      let slotRef: Ref<HTMLElement | null> = ref(null);\n\n      const setSlotRef = (el: HTMLElement) => {\n        slotRef.value = el;\n      };\n\n      watch(marker, (marker) => {\n        if ('_map' in marker) {\n          isMarkerAvailable.value = true;\n        } else {\n          isMarkerAvailable.value = false;\n        }\n      });\n\n      onMounted(() => {\n        if (loaded.value) {\n          if (slotRef.value !== null) {\n            // add marker to map\n            marker.value = new Marker({\n              element: slotRef.value!,\n              ...props.options,\n            });\n            setMarkerCoordinates(marker.value);\n            addToMap(marker.value);\n            setCursorPointer(marker.value);\n            listenMarkerEvents(marker.value);\n          } else {\n            marker.value = new Marker(props.options);\n            setMarkerCoordinates(marker.value);\n            addToMap(marker.value);\n            setCursorPointer(marker.value);\n            listenMarkerEvents(marker.value);\n          }\n        } else {\n          removeFromMap(marker.value);\n        }\n      });\n\n      onBeforeUnmount(() => {\n        removeFromMap(marker.value);\n      });\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Set marker coordinates\n       *\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function setMarkerCoordinates(marker: Marker): void {\n        marker.setLngLat(props.coordinates);\n      }\n      /**\n       * Sets the Cursor to Pointer\n       *\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function setCursorPointer(marker: Marker): void {\n        marker.getElement().style.cursor = props.cursor || 'default';\n      }\n\n      /**\n       * Add marker to map\n       *\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function addToMap(marker: Marker): void {\n        marker.addTo(map.value);\n        emit('added', { marker });\n      }\n      /**\n       * Remove marker from map\n       *\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function removeFromMap(marker: Marker): void {\n        if (isMarkerAvailable.value) {\n          marker.remove();\n          emit('removed');\n        }\n      }\n\n      /**\n       * Listen to events\n       *\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function listenMarkerEvents(marker: Marker): void {\n        let coordinates: LngLatLike;\n        // Listen to Marker Mapbox events\n        markerMapEvents.forEach((event: string) => {\n          marker.on(event, (e: EventData) => {\n            if (event === 'dragend') {\n              if (props.coordinates instanceof Array) {\n                coordinates = [e.target._lngLat.lng, e.target._lngLat.lat];\n              } else {\n                coordinates = e.target._lngLat;\n              }\n              emit('update:coordinates', coordinates);\n            }\n            emit(event, e);\n          });\n        });\n        // Listen to Marker DOM events\n        markerDOMEvents.forEach((event: string) => {\n          marker.getElement().addEventListener(event, (e) => {\n            emit(event, e);\n          });\n        });\n      }\n\n      return {\n        isMarkerAvailable,\n        marker,\n        setSlotRef,\n      };\n    },\n  });\n</script>\n<style>\n  .absolute {\n    position: absolute !important;\n  }\n</style>\n","<template>\n  <section :id=\"`marker-${Date.now()}`\" class=\"absolute\">\n    <slot :set-ref=\"setSlotRef\" name=\"markers\" />\n    <template v-if=\"isMarkerAvailable\">\n      <v-popup\n        :marker=\"marker\"\n        :options=\"popupOptions\"\n        :coordinates=\"coordinates\"\n      >\n        <slot />\n      </v-popup>\n    </template>\n  </section>\n</template>\n<script lang=\"ts\">\n  import type {\n    EventData,\n    LngLatLike,\n    MarkerOptions,\n    PopupOptions,\n  } from 'mapbox-gl';\n  import { Marker } from 'mapbox-gl';\n  import type { PropType, Ref, SetupContext } from 'vue';\n  import { defineComponent, onMounted, onBeforeUnmount, ref, watch } from 'vue';\n  import { markerDOMEvents, markerMapEvents } from '../constants/events';\n  import VPopup from '../popups/VPopup.vue';\n  import { injectStrict, MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VMarker',\n    components: {\n      VPopup,\n    },\n    props: {\n      options: {\n        type: Object as PropType<MarkerOptions>,\n        default: () => ({} as MarkerOptions),\n        required: true,\n      },\n      popupOptions: {\n        type: Object as PropType<PopupOptions>,\n        default: () => ({} as PopupOptions),\n        required: true,\n      },\n      coordinates: {\n        type: [Object, Array] as PropType<LngLatLike>,\n        default: () => ({}),\n        required: true,\n      },\n      cursor: {\n        type: String as PropType<string>,\n        default: 'pointer',\n        required: false,\n      },\n    },\n    setup(props, { emit }: SetupContext) {\n      let map = injectStrict(MapKey);\n      let marker: Ref<Marker> = ref({}) as Ref<Marker>;\n      let loaded: Ref<boolean> = ref(true);\n      let isMarkerAvailable = ref(false);\n      let slotRef: Ref<HTMLElement | null> = ref(null);\n\n      const setSlotRef = (el: HTMLElement) => {\n        slotRef.value = el;\n      };\n\n      watch(marker, (marker) => {\n        if ('_map' in marker) {\n          isMarkerAvailable.value = true;\n        } else {\n          isMarkerAvailable.value = false;\n        }\n      });\n\n      onMounted(() => {\n        if (loaded.value) {\n          if (slotRef.value !== null) {\n            // add marker to map\n            marker.value = new Marker({\n              element: slotRef.value!,\n              ...props.options,\n            });\n            setMarkerCoordinates(marker.value);\n            addToMap(marker.value);\n            setCursorPointer(marker.value);\n            listenMarkerEvents(marker.value);\n          } else {\n            marker.value = new Marker(props.options);\n            setMarkerCoordinates(marker.value);\n            addToMap(marker.value);\n            setCursorPointer(marker.value);\n            listenMarkerEvents(marker.value);\n          }\n        } else {\n          removeFromMap(marker.value);\n        }\n      });\n\n      onBeforeUnmount(() => {\n        removeFromMap(marker.value);\n      });\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Set marker coordinates\n       *\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function setMarkerCoordinates(marker: Marker): void {\n        marker.setLngLat(props.coordinates);\n      }\n      /**\n       * Sets the Cursor to Pointer\n       *\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function setCursorPointer(marker: Marker): void {\n        marker.getElement().style.cursor = props.cursor || 'default';\n      }\n\n      /**\n       * Add marker to map\n       *\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function addToMap(marker: Marker): void {\n        marker.addTo(map.value);\n        emit('added', { marker });\n      }\n      /**\n       * Remove marker from map\n       *\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function removeFromMap(marker: Marker): void {\n        if (isMarkerAvailable.value) {\n          marker.remove();\n          emit('removed');\n        }\n      }\n\n      /**\n       * Listen to events\n       *\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function listenMarkerEvents(marker: Marker): void {\n        let coordinates: LngLatLike;\n        // Listen to Marker Mapbox events\n        markerMapEvents.forEach((event: string) => {\n          marker.on(event, (e: EventData) => {\n            if (event === 'dragend') {\n              if (props.coordinates instanceof Array) {\n                coordinates = [e.target._lngLat.lng, e.target._lngLat.lat];\n              } else {\n                coordinates = e.target._lngLat;\n              }\n              emit('update:coordinates', coordinates);\n            }\n            emit(event, e);\n          });\n        });\n        // Listen to Marker DOM events\n        markerDOMEvents.forEach((event: string) => {\n          marker.getElement().addEventListener(event, (e) => {\n            emit(event, e);\n          });\n        });\n      }\n\n      return {\n        isMarkerAvailable,\n        marker,\n        setSlotRef,\n      };\n    },\n  });\n</script>\n<style>\n  .absolute {\n    position: absolute !important;\n  }\n</style>\n","// Controls\nimport VControlAttribution from './controls/VControlAttribution.vue';\nimport VControlFullscreen from './controls/VControlFullscreen.vue';\nimport VControlGeolocate from './controls/VControlGeolocate.vue';\nimport VControlNavigation from './controls/VControlNavigation.vue';\nimport VControlScale from './controls/VControlScale.vue';\n// Layers â€“ Deck.gl\nimport VLayerDeckArc from './layers/deck.gl/VLayerDeckArc.vue';\nimport VLayerDeckGeojson from './layers/deck.gl/VLayerDeckGeojson.vue';\n// Layers â€“ Mapbox\nimport VLayerMapboxCanvas from './layers/mapbox/VLayerMapboxCanvas.vue';\nimport VLayerMapboxGeojson from './layers/mapbox/VLayerMapboxGeojson.vue';\nimport VLayerMapboxImage from './layers/mapbox/VLayerMapboxImage.vue';\nimport VLayerMapboxRaster from './layers/mapbox/VLayerMapboxRaster.vue';\nimport VLayerMapboxVector from './layers/mapbox/VLayerMapboxVector.vue';\nimport VLayerMapboxVideo from './layers/mapbox/VLayerMapboxVideo.vue';\n// Map\nimport VMap from './map/VMap.vue';\n// Marker\nimport VMarker from './markers/VMarker.vue';\n// Popup\nimport VPopup from './popups/VPopup.vue';\n\nexport {\n  VMap,\n  // Marker\n  VMarker,\n  // Popup\n  VPopup,\n  // Layers\n  VLayerDeckArc,\n  VLayerDeckGeojson,\n  VLayerMapboxCanvas,\n  VLayerMapboxGeojson,\n  VLayerMapboxImage,\n  VLayerMapboxRaster,\n  VLayerMapboxVector,\n  VLayerMapboxVideo,\n  // Controls\n  VControlAttribution,\n  VControlFullscreen,\n  VControlGeolocate,\n  VControlNavigation,\n  VControlScale,\n};\n\nexport default VMap;\n"],"names":["inject","onMounted","AttributionControl","events","ScaleControl","ref","GeoJsonLayer","watch","onBeforeUnmount","provide","Popup","VPopup","Marker"],"mappings":"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"}